name: Test github actions

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.automerge.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install google_play_scraper

    - name: Get version from Google Play
      id: get_version
      run: |
        echo "VERSION=$(python scripts/get_version_from_store.py $APPLICATION_ID)" >> $GITHUB_ENV
      env:
        APPLICATION_ID: ${{ vars.APPLICATION_ID }}

    - name: show extracted the version
      run: |
        echo "Detected version: $VERSION"

    - name: Auto merge PR
      id: automerge
      run: |
        echo "version: $VERSION"
        echo $(gh pr list --base main --head release/v$VERSION --json number)
        PR_NUMBER=$(gh pr list --base main --head release/v$VERSION --json number | jq '.[0].number')
        if [ "$PR_NUMBER" != "null" ]; then
          gh pr merge $PR_NUMBER --merge
          echo "Merged PR #$PR_NUMBER"
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
        else
          echo "No matching PR found"
        fi
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  create-tag:
    needs: auto-merge
    if: ${{ needs.auto-merge.outputs.version }} != ""
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.auto-merge.outputs.version }}
        release_name: ${{ needs.auto-merge.outputs.version }}
        draft: false
        prerelease: false
